# -*- coding: utf-8 -*-

from systems.imports import *

@dp.message_handler(lambda m: m.text.lower() in ["–ø—Ä–æ–º–æ–∫–æ–¥—ã", "–ü—Ä–æ–º–æ–∫–æ–¥—ã"])
async def promiki(message):
	list = cursor.execute(f'SELECT * FROM promiki ORDER BY reward DESC').fetchmany(30)
	top_list = []
	rec = cursor.execute('SELECT * FROM promiki').fetchall()
	vsego2 = len(rec)
	if vsego2 == 0:
		return await message.answer('–ü—Ä–æ–º–æ–∫–æ–¥–æ–≤ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
	num = 0
	for user in list:
		num += 1
		top_list.append(f'{num}. {user[1]} | –ù–∞ –æ–¥–Ω–æ–≥–æ: $<code>{user[2]}</code> | –ê–∫—Ç–∏–≤–∞—Ü–∏–π: {user[3]} | –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–æ: {user[4]}')
	top = "\n".join(top_list)
	return await message.answer(f'–í—Å–µ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: {vsego2}\n\n' + top)

@dp.message_handler(lambda t: t.text.startswith("–ø—Ä–æ–º–æ —Å–æ–∑–¥–∞—Ç—å") or t.text.startswith("–ü—Ä–æ–º–æ —Å–æ–∑–¥–∞—Ç—å") or t.text.startswith("—Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ") or t.text.startswith("–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ"))
async def promo(message):
	user_name = cursor.execute(f"SELECT user_name from users where user_id = {message.from_user.id}").fetchone()
	balance = cursor.execute(f"SELECT balance from users where user_id = {message.from_user.id}").fetchone()
	balance = round(int(balance[0]))
	balance2 = '{:,}'.format(balance).replace(',', '.')
	user_name = user_name[0]
	try:
		name = message.text.split()[2]
		akt = int(message.text.split()[3])
		dengi5 = message.text.split()[4]
	except:
		await message.answer(f'–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: –ø—Ä–æ–º–æ —Å–æ–∑–¥–∞—Ç—å [–∏–º—è] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç.] [—Å—É–º–º–∞ (–Ω–∞ –æ–¥–Ω–æ–≥–æ)]')
	cursor.execute(f"SELECT promo_name FROM promiki WHERE promo_name = '{name}' ") # —Ç–≥ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç ' –≤ "
	akt2 = '{:,}'.format(akt).replace(',', '.')
	dengi4 = (dengi5).replace(' ', '').replace('k', '000').replace('–µ','e').replace('–∫', '000').replace(',', '').replace('.', '').replace("$", "").replace('–º', '000000').replace('m', '000000')
	dengi3 = float(dengi4)
	dengi = int(dengi3)
	denfi = int(dengi*akt)
	denfi2 = '{:,}'.format(denfi).replace(',', '.')
	dengi2 = '{:,}'.format(dengi).replace(',', '.')
	if cursor.fetchone() != None:
		return await message.answer(f'–ò–º—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ "{name}" –∑–∞–Ω—è—Ç–æ.')
	if dengi*akt > balance:
		return await message.answer(f'‚ùó–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞!\nüìë –ù—É–∂–Ω–æ: <code>{denfi2}</code>\nüìÑ –ù–∞ –±–∞–ª–∞–Ω—Å–µ: <code>{balance2}</code>')
	if len(name) < 3 or len(name) > 24:
		return await message.answer(f'‚ùï–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –º–µ–Ω—å—à–µ 3 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –±–æ–ª—å—à–µ 24 —Å–∏–º–≤–æ–ª–æ–≤.')
	if akt < 2:
		return await message.answer(f'‚ùå –ò–∑–≤–∏–Ω–∏, –Ω–æ –Ω–µ–ª—å–∑—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã, –≥–¥–µ –∫–æ–¥–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π 1')
	if dengi < 100:
		return await message.answer(f'‚ùå –ò–∑–≤–∏–Ω–∏, –Ω–æ –Ω–µ–ª—å–∑—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã, –≥–¥–µ –Ω–∞ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–∞—é—Ç: <code>100</code>$')
	cursor.execute(f"INSERT INTO promiki VALUES ({message.from_user.id}, '{name}', {dengi}, {akt}, 0)")
	connect.commit()
	cursor.execute(f'UPDATE users SET balance = {balance-dengi*akt} WHERE user_id = {message.from_user.id}')
	connect.commit()
	return await message.answer(f'‚úîÔ∏è –í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥: ¬´<code>{name}</code>¬ª\n‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π: <code>{akt2}</code>\nüë• –ù–∞ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{dengi2}</code>$\nüßæ –° –±–∞–ª–∞–Ω—Å–∞ –±—ã–ª–æ —Å–Ω—è—Ç–æ: <code>{denfi2}</code>$')
	
@dp.message_handler(lambda t: t.text.startswith("–ø—Ä–æ–º–æ") or t.text.startswith("–ü—Ä–æ–º–æ"))
async def promoco(message):
	try:
		vvod = message.text.split()[1]
	except:
		return await message.answer(f'‚ùå –í—ã –Ω–µ –≤–≤–µ–ª–∏ –∏–º—è –ø—Ä–æ–º–æ–∫–æ–¥–∞')
	cursor.execute(f"SELECT activation FROM promo WHERE user_id = {message.from_user.id} AND promo_name = '{vvod}'")
	if cursor.fetchone() != None:
		return await message.answer(f'‚ùå –í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥')
	cursor.execute(f"SELECT promo_name FROM promiki WHERE promo_name = '{vvod}'")
	if cursor.fetchone() == None:
		return await message.answer('–î–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
	cursor.execute(f"SELECT users, max_users, reward FROM promiki WHERE promo_name = '{vvod}'")
	for k in cursor.fetchall():
		if k[0] >= k[1]:
			pp = '{:,}'.format(k[1]).replace(',', '.')
			return await message.answer(f'üë• –≠—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–æ –≤—Å–µ <code>{pp}</code> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.', parse_mode='html')
	cursor.execute(f"UPDATE promiki SET users = users + 1 WHERE promo_name = '{vvod}'")
	cursor.execute(f"UPDATE users SET balance = balance + {k[2]} WHERE user_id = {message.from_user.id}")
	cursor.execute(f"INSERT INTO promo VALUES ({message.from_user.id}, 1, '{vvod}')")
	connect.commit()
	money = '{:,}'.format(k[2]).replace(',', '.')
	balance = cursor.execute("SELECT balance from users where user_id = ?", (message.from_user.id,)).fetchone()
	balance = round(int(balance[0]))
	balik2 = '{:,}'.format(balance).replace(',', '.')
	return await message.answer(f'üë§ –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥\n‚úÖ –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ: <code>{money}</code>$\n–¢–µ–ø–µ—Ä—å –≤–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: <code>{balik2}</code>$', parse_mode='html')